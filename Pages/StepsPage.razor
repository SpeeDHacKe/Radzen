@page "/steps"

@using RadzenBlazorDemos.Data
@using RadzenBlazorDemos.Models.Northwind
@using Microsoft.EntityFrameworkCore

@inject NorthwindContext dbContext

<RadzenExample Name="Steps">
<div class="row">
    <div class="col-xl-6">
        <RadzenSteps Change=@OnChange>
            <Steps>
                <RadzenStepsItem Text="Customers">
                    <h3>Select Customer</h3>
                    <RadzenGrid ColumnWidth="200px" AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="@customers" TItem="Customer" Value="@customer" RowSelect="@(args => customer = args)">
                        <Columns>
                            <RadzenGridColumn TItem="Customer" Property="CustomerID" Title="Customer ID" />
                            <RadzenGridColumn TItem="Customer" Property="CompanyName" Title="Company Name" />
                            <RadzenGridColumn TItem="Customer" Property="ContactName" Title="Contact Name" />
                            <RadzenGridColumn TItem="Customer" Property="ContactTitle" Title="Contact Title" />
                            <RadzenGridColumn TItem="Customer" Property="Address" Title="Address" />
                            <RadzenGridColumn TItem="Customer" Property="City" Title="City" />
                            <RadzenGridColumn TItem="Customer" Property="Region" Title="Region" />
                            <RadzenGridColumn TItem="Customer" Property="PostalCode" Title="Postal Code" />
                            <RadzenGridColumn TItem="Customer" Property="Country" Title="Country" />
                            <RadzenGridColumn TItem="Customer" Property="Phone" Title="Phone" />
                            <RadzenGridColumn TItem="Customer" Property="Fax" Title="Fax" />
                        </Columns>
                    </RadzenGrid>
                </RadzenStepsItem>
                <RadzenStepsItem Text="Orders" Disabled="@(customer == null)">
                    <h3>Select Order</h3>
                    <RadzenGrid ColumnWidth="200px" PageSize="2" AllowFiltering="true" AllowPaging="true" AllowSorting="true" 
                                Data="@orders" TItem="Order" Value="@order" RowSelect="@(args => order = args)">
                        <Columns>
                            <RadzenGridColumn Width="100px" TItem="Order" Property="OrderID" Title="Order ID" />
                            <RadzenGridColumn Width="200px" TItem="Order" Property="Customer.CompanyName" Title="Customer" />
                            <RadzenGridColumn Width="150px" TItem="Order" Property="Employee.LastName" Title="Employee">
                                <Template Context="order">
                                    <div>@order.Employee?.LastName</div>
                                    <RadzenImage Path="@order.Employee?.Photo" />
                                </Template>
                            </RadzenGridColumn>
                            <RadzenGridColumn TItem="Order" Property="OrderDate" Title="Order Date">
                                <Template Context="order">
                                    @String.Format("{0:d}", order.OrderDate)
                                </Template>
                            </RadzenGridColumn>
                            <RadzenGridColumn TItem="Order" Property="RequiredDate" Title="Required Date">
                                <Template Context="order">
                                    @String.Format("{0:d}", order.RequiredDate)
                                </Template>
                            </RadzenGridColumn>
                            <RadzenGridColumn TItem="Order" Property="ShippedDate" Title="Shipped Date">
                                <Template Context="order">
                                    @String.Format("{0:d}", order.ShippedDate)
                                </Template>
                            </RadzenGridColumn>
                            <RadzenGridColumn TItem="Order" Property="Freight" Title="Freight">
                                <Template Context="order">
                                    @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", order.Freight)
                                </Template>
                            </RadzenGridColumn>
                            <RadzenGridColumn TItem="Order" Property="ShipName" Title="Ship Name" />
                            <RadzenGridColumn TItem="Order" Property="ShipAddress" Title="Ship Address" />
                            <RadzenGridColumn TItem="Order" Property="ShipCity" Title="Ship City" />
                            <RadzenGridColumn TItem="Order" Property="ShipRegion" Title="Ship Region" />
                            <RadzenGridColumn TItem="Order" Property="ShipPostalCode" Title="Ship Postal Code" />
                            <RadzenGridColumn TItem="Order" Property="ShipCountry" Title="Ship Country" />
                        </Columns>
                    </RadzenGrid>
                </RadzenStepsItem>
                <RadzenStepsItem Text="Order Details" Disabled="@(order == null)">
                    <RadzenGrid AllowFiltering="true" AllowPaging="true" AllowSorting="true"
                                Data="@(orderDetails.Where(o => o.OrderID == order.OrderID))" TItem="OrderDetail" ColumnWidth="200px">
                        <Columns>
                            <RadzenGridColumn TItem="OrderDetail" Property="Product.ProductName" Title="Product" />
                            <RadzenGridColumn TItem="OrderDetail" Property="Quantity" Title="Quantity" />
                            <RadzenGridColumn TItem="OrderDetail" Property="Discount" Title="Discount" FormatString="{0:P}" />
                        </Columns>
                    </RadzenGrid>
                </RadzenStepsItem>
            </Steps>
        </RadzenSteps>
    </div>
    <div class="col-xl-6">
        <EventConsole @ref=@console />
    </div>
</div>
</RadzenExample>

@code {
    EventConsole console;
    IEnumerable<Customer> customers;
    IEnumerable<Order> orders;
    IEnumerable<OrderDetail> orderDetails;

    Customer customer;
    Order order;

    protected override void OnInitialized()
    {
        customers = dbContext.Customers.ToList();
        orders = dbContext.Orders.Include("Customer").Include("Employee").ToList();
        orderDetails = dbContext.OrderDetails.Include("Product").ToList();
    }
    void OnChange(int index)
    {
        console.Log($"Step with index {index} was selected.");
    }
}